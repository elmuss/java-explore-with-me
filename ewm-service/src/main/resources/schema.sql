DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS locations CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS events CASCADE;
DROP TABLE IF EXISTS requests CASCADE;
DROP TABLE IF EXISTS compilations CASCADE;
DROP TABLE IF EXISTS events_compilations CASCADE;

CREATE TABLE IF NOT EXISTS categories (
id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
name VARCHAR(512) NOT NULL UNIQUE,
CONSTRAINT pk_categories PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS locations (
id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
lat FLOAT,
lon FLOAT,
CONSTRAINT pk_locations PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS users (
id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
name VARCHAR(255) NOT NULL,
email VARCHAR(512) NOT NULL,
CONSTRAINT pk_users PRIMARY KEY (id),
CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS events (
id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
annotation VARCHAR NOT NULL,
category_id INT REFERENCES categories(id) NOT NULL,
confirmed_requests INT,
description VARCHAR,
created_on TIMESTAMP WITHOUT TIME ZONE,
event_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
initiator_id INT REFERENCES users(id) NOT NULL,
location_id INT REFERENCES locations(id),
paid BOOLEAN NOT NULL,
participant_limit INT,
published_on TIMESTAMP WITHOUT TIME ZONE,
request_moderation BOOLEAN,
state VARCHAR(255),
title VARCHAR NOT NULL,
views INT,
CONSTRAINT pk_events PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS requests (
id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
created TIMESTAMP WITHOUT TIME ZONE,
event_id INT REFERENCES events(id),
requester_id INT REFERENCES users(id),
status VARCHAR(255),
CONSTRAINT pk_requests PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS compilations (
id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
title VARCHAR NOT NULL,
pinned BOOLEAN,
CONSTRAINT pk_compilations PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS events_compilations (
id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
event_id INT NOT NULL REFERENCES events(id),
compilation_id INT NOT NULL REFERENCES compilations(id),
CONSTRAINT pk_events_compilations PRIMARY KEY (id)
);